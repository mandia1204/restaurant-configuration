- name: "{{ create_or_delete }} secret"
  kubernetes.core.k8s:
    state: "{{ desired_state }}"
    definition: "{{ lookup('template', 'templates/secret.j2') | from_yaml }}"

- name: "{{ create_or_delete }} configmap"
  kubernetes.core.k8s:
    state: "{{ desired_state }}"
    definition: "{{ lookup('file', 'files/configmap.yml') | from_yaml }}"

- name: "{{ create_or_delete }} service"
  kubernetes.core.k8s:
    state: "{{ desired_state }}"
    definition: "{{ lookup('file', 'files/service.yml') | from_yaml }}"

- name: "get latest image tag"
  uri:
    url: "{{image_tag_api_url | replace('APP_NAME','securityapp')}}"
    method: GET
  register: get_tag_response
  when: (app_image_tag|length == 0) and (desired_state == "present")

- set_fact: app_image_tag="{{ get_tag_response.json.results[0].name }}"
  when: (app_image_tag|length == 0) and (desired_state == "present")

- name: "{{ create_or_delete }} deployment"
  kubernetes.core.k8s:
    state: "{{ desired_state }}"
    definition: "{{ lookup('template', 'templates/deployment.j2') | from_yaml }}"

- name: "{{ create_or_delete }} tls context"
  kubernetes.core.k8s:
    state: "{{ desired_state }}"
    definition: "{{ lookup('file', 'files/tls.yml') | from_yaml_all | list }}"

- name: "{{ create_or_delete }} ambassador mapping"
  kubernetes.core.k8s:
    state: "{{ desired_state }}"
    definition: "{{ lookup('file', 'files/mapping.yml') | from_yaml_all | list }}"
