remove dangling images:

docker rmi $(docker images -f "dangling=true" -q)
docker rmi $(docker images logging-app -q)
https://www.projectatomic.io/blog/2015/07/what-are-docker-none-none-images/


build image from dockerfile:
============================
docker build -t "restaurant-security:v1.1.2" .

docker build -t "restaurant-security-db:v1.1.0" -f DockerFile-db .

creates a container from image:

docker run --name restaurant-security -d restaurant-security:latest
docker run --name restaurant-security-db -d -e MONGO_INITDB_ROOT_USERNAME=matt -e MONGO_INITDB_ROOT_PASSWORD=1234 -e MONGO_INITDB_DATABASE=restaurant_security restaurant-security-db:v1.1.0

docker run --name restaurant-front-end -d -p 80:80 -v $(pwd)/nginx.conf:/etc/nginx/nginx.conf mandia1204/dashboard-fe-app:1.0.0
docker run --name restaurant-front-end -d -p 80:80 mandia1204/dashboard-fe-app:1.0.0


using docker hub:
=================
create an account 1 free repo.
user: mandia1204
pass: x...9

docker build -t "mandia1204/securityapp:v1.0.0" .

* before pushing we need run:
  docker login (it asks for username and pass)

docker push <hub-user>/<repo-name>:<tag>
docker push mandia1204/securityapp:v1.0.0

https://docs.docker.com/docker-hub/repos/#pushing-a-repository-image-to-docker-hub


* after intalling docker we need to add our user to the group.
https://docs.docker.com/install/linux/linux-postinstall/
sudo groupadd docker
sudo usermod -aG docker $USER
sudo usermod -aG docker jenkins

connect to remote daemon
========================
https://nickjanetakis.com/blog/docker-tip-73-connecting-to-a-remote-docker-daemon

Inside VM with docker:

# Create the directory to store the configuration file.
sudo mkdir -p /etc/systemd/system/docker.service.d

# Create a new file to store the daemon options.
sudo nano /etc/systemd/system/docker.service.d/options.conf

# Now make it look like this and save the file when you're done:
[Service]
ExecStart=
ExecStart=/usr/bin/dockerd -H unix:// -H tcp://0.0.0.0:2375

# Reload the systemd daemon.
sudo systemctl daemon-reload

# Restart Docker.
sudo systemctl restart docker

#open port
sudo ufw allow 2375/tcp
sudo ufw allow 5858/tcp

in client:
add env variable
DOCKER_HOST=tcp://[ip vm with docker]:2375

