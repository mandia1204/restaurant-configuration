1- Use the last artifacts
2- Copy this artifacts to the server using ssh
3- Build the image using the artifact with the new tag
    - if not using docker hub:
        eval $(minikube docker-env) 
        docker build -t "restaurant-security:v1.1.5" .
    - using docker hub:
        docker build -t "mandia1204/securityapp:v1.0.0" .
        publish the image to dockerhub
        docker push mandia1204/securityapp:v1.0.0
4- Update deployment image using kubectl, this will generate new pods
    - if not using docker hub:
        kubectl patch deployment security-app -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"date\":\"`date +'%s'`\"}}}}}"
    - using docker hub
        kubectl set image deployment/security-app res-security=mandia1204/securityapp:v1.0.0 (from docker hub username/reponame)

5- If necessary, update the configmap or env vars.
    kubectl create configmap security-config --from-file=app-config=dist/config/default.js -o yaml --dry-run | kubectl replace -f -
    

create service: (/restaurant/security)
kubectl create -f ./security-app/security-service.yml


test the service:
curl $(minikube service security-app --url)
curl -d '{ "userName": "matt", "password": "1234"}' -H "Content-Type: application/json" -X POST $(minikube service security-app --url)/token

FOLDER STRUCTURE
================
- k8s master:

restaurant
    deploy (scripts and vars)
    k8s
    security
    dashboard-backend

- inside each app folder like "security" we need: 
    - to create a APP_NAME-vars.sh file to set values for IMAGE_REPO_NAME, DEPLOYMENT_NAME, CONTAINER_NAME
    - add the dockerfile for building the image and upload it to docker hub
- Jenkins node:
/home/jenkins
    restaurant
        deploy